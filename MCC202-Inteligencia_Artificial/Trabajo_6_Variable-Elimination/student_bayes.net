net
{
	propagationenginegenerator1791944048146838126L = "edu.ucla.belief.approx.BeliefPropagationSettings@77deb5b5";
	recoveryenginegenerator6944530267470113528l = "edu.ucla.util.SettingsImpl@51007455";
	jenginegenerator6060830225489488864L = "edu.ucla.belief.inference.JoinTreeSettings@6e6ff55f";
	node_size = (130.0 55.0);
}

node grade
{
	states = ("g1" "g2" "g3" );
	position = (351 -276);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable3";
	label = "Grade";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	excludepolicy = "include whole CPT";
}
node letter
{
	states = ("good" "bad" );
	position = (356 -430);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable5";
	label = "Letter";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	excludepolicy = "include whole CPT";
}
node intelligence
{
	states = ("yes" "no" );
	position = (511 -117);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable1";
	label = "Intelligence";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	excludepolicy = "include whole CPT";
}
node difficulty
{
	states = ("yes" "no" );
	position = (226 -105);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable2";
	label = "Difficulty";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	excludepolicy = "include whole CPT";
}
node sat
{
	states = ("yes" "no" );
	position = (628 -278);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable4";
	label = "SAT";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	excludepolicy = "include whole CPT";
}
potential ( grade | difficulty intelligence )
{
	data = (((	0.5	0.3	0.2	)
		(	0.05	0.25	0.7	))
		((	0.9	0.08	0.02	)
		(	0.3	0.4	0.3	)));
}
potential ( letter | grade )
{
	data = ((	0.9	0.1	)
		(	0.6	0.4	)
		(	0.01	0.99	));
}
potential ( intelligence | )
{
	data = (	0.3	0.7	);
}
potential ( difficulty | )
{
	data = (	0.4	0.6	);
}
potential ( sat | intelligence )
{
	data = ((	0.8	0.2	)
		(	0.05	0.95	));
}
